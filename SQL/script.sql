-- MySQL Script generated by MySQL Workbench
-- Wed May 19 12:28:12 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema licitacion
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `licitacion` ;

-- -----------------------------------------------------
-- Schema licitacion
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `licitacion` DEFAULT CHARACTER SET utf8 ;
USE `licitacion` ;

-- -----------------------------------------------------
-- Table `licitacion`.`tbl_address_format_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_address_format_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_address_format_code` (
  `address_format_code` INT(11) NOT NULL,
  `description` VARCHAR(250) NULL DEFAULT NULL,
  PRIMARY KEY (`address_format_code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_funding_program_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_funding_program_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_funding_program_code` (
  `code` VARCHAR(5) NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_contract_folder_status_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_contract_folder_status_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_contract_folder_status_code` (
  `code` VARCHAR(50) NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_type_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_type_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_type_code` (
  `code` INT(11) NOT NULL,
  `nombre` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_subtype_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_subtype_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_subtype_code` (
  `code` INT(11) NOT NULL,
  `type_code` INT(11) NOT NULL,
  `nombre` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`code`, `type_code`),
  INDEX `fk_tbl_subtype_code_tbl_type_code1_idx` (`type_code` ASC),
  CONSTRAINT `fk_tbl_subtype_code_tbl_type_code1`
    FOREIGN KEY (`type_code`)
    REFERENCES `licitacion`.`tbl_type_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_expedientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_expedientes` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_expedientes` (
  `expedientes` INT(11) NOT NULL,
  `numero_expediente` VARCHAR(100) NOT NULL,
  `title` VARCHAR(2000) NOT NULL,
  `link` VARCHAR(2500) NOT NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `objeto_contrato` VARCHAR(2000) NOT NULL,
  `valor_estimado` DECIMAL(12,2) NULL DEFAULT NULL,
  `presupuesto_sin_impuestos` DECIMAL(12,2) NULL DEFAULT NULL,
  `presupuesto_con_impuestos` DECIMAL(12,2) NULL DEFAULT NULL,
  `start_date` DATE NULL DEFAULT NULL,
  `end_date` DATE NULL DEFAULT NULL,
  `duracion` DECIMAL(17,0) NULL DEFAULT NULL,
  `unitcode` VARCHAR(45) NULL DEFAULT NULL,
  `typecode` INT(11) NULL DEFAULT NULL,
  `subtypecode` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`expedientes`),
  INDEX `typecode_idx` (`typecode` ASC),
  INDEX `subtypecode_idx` (`subtypecode` ASC),
  CONSTRAINT `subtypecode`
    FOREIGN KEY (`subtypecode`)
    REFERENCES `licitacion`.`tbl_subtype_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `typecode`
    FOREIGN KEY (`typecode`)
    REFERENCES `licitacion`.`tbl_type_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_modosid`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_modosid` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_modosid` (
  `modosid` INT(11) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`modosid`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_ids`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_ids` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_ids` (
  `ids` INT(11) NOT NULL AUTO_INCREMENT,
  `modosid` INT(11) NOT NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ids`),
  INDEX `modosid_idx` (`modosid` ASC),
  CONSTRAINT `modosid`
    FOREIGN KEY (`modosid`)
    REFERENCES `licitacion`.`tbl_modosid` (`modosid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 16
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_ids_expedientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_ids_expedientes` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_ids_expedientes` (
  `ids_expedientes` INT(11) NOT NULL AUTO_INCREMENT,
  `ids` INT(11) NOT NULL,
  `expediente` INT(11) NOT NULL,
  `summary` VARCHAR(400) NOT NULL,
  `updated` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `estado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ids_expedientes`),
  INDEX `ids_idx` (`ids` ASC),
  INDEX `expediente_idx` (`expediente` ASC),
  INDEX `estado_idx` (`estado` ASC),
  CONSTRAINT `estado`
    FOREIGN KEY (`estado`)
    REFERENCES `licitacion`.`tbl_contract_folder_status_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `expediente`
    FOREIGN KEY (`expediente`)
    REFERENCES `licitacion`.`tbl_expedientes` (`expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ids`
    FOREIGN KEY (`ids`)
    REFERENCES `licitacion`.`tbl_ids` (`ids`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 10
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_condiciones_de_licitacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_condiciones_de_licitacion` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_condiciones_de_licitacion` (
  `condiciones_de_licitacion` INT(11) NOT NULL AUTO_INCREMENT,
  `cv` TINYINT(4) NULL DEFAULT NULL,
  `admision_de_variantes` TINYINT(4) NULL DEFAULT NULL,
  `revision_de_precios` VARCHAR(256) NULL DEFAULT NULL,
  `descripcion_programas_financiacion` VARCHAR(3400) NULL DEFAULT NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `programa_de_financiacion` VARCHAR(5) NULL DEFAULT NULL,
  `ids_expedientes` INT(11) NOT NULL,
  PRIMARY KEY (`condiciones_de_licitacion`),
  INDEX `fk_tbl_condiciones_de_licitacion_tbl_funding_program_code1_idx` (`programa_de_financiacion` ASC),
  INDEX `fk_tbl_condiciones_de_licitacion_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  CONSTRAINT `fk_tbl_condiciones_de_licitacion_tbl_funding_program_code1`
    FOREIGN KEY (`programa_de_financiacion`)
    REFERENCES `licitacion`.`tbl_funding_program_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_condiciones_de_licitacion_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_contracting_party_type_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_contracting_party_type_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_contracting_party_type_code` (
  `code` INT(11) NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_contracting_system_type_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_contracting_system_type_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_contracting_system_type_code` (
  `code` INT(11) NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_country_identification_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_country_identification_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_country_identification_code` (
  `code` VARCHAR(3) NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_country_subentity_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_country_subentity_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_country_subentity_code` (
  `code` VARCHAR(5) NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_cpv`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_cpv` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_cpv` (
  `code` INT(11) NOT NULL,
  `nombre` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_dgpe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_dgpe` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_dgpe` (
  `dgpe` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre_tabla` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`dgpe`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_entidad_adjudicadora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_entidad_adjudicadora` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_entidad_adjudicadora` (
  `entidad_adjudicadora` INT(11) NOT NULL AUTO_INCREMENT,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ubicacion_organica` VARCHAR(300) NOT NULL,
  `nombre` VARCHAR(300) NOT NULL,
  `tipo_administracion` INT(11) NOT NULL,
  `sitio_web` VARCHAR(256) NULL DEFAULT NULL,
  `calle` VARCHAR(220) NULL DEFAULT NULL,
  `codigo_postal` VARCHAR(32) NULL DEFAULT NULL,
  `poblacion` VARCHAR(90) NULL DEFAULT NULL,
  `pais` VARCHAR(3) NULL DEFAULT NULL,
  `nombre_contacto` VARCHAR(300) NULL DEFAULT NULL,
  `telefono` VARCHAR(55) NULL DEFAULT NULL,
  `fax` VARCHAR(55) NULL DEFAULT NULL,
  `correo_electronico` VARCHAR(500) NULL DEFAULT NULL,
  `NIF` VARCHAR(200) NOT NULL,
  `ids_expedientes` INT(11) NOT NULL,
  PRIMARY KEY (`entidad_adjudicadora`),
  INDEX `fk_tbl_entidad_adjudicadora_tbl_contracting_party_type_code_idx` (`tipo_administracion` ASC),
  INDEX `fk_tbl_entidad_adjudicadora_tbl_country_identification_code_idx` (`pais` ASC),
  INDEX `fk_tbl_entidad_adjudicadora_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  CONSTRAINT `fk_tbl_entidad_adjudicadora_tbl_contracting_party_type_code1`
    FOREIGN KEY (`tipo_administracion`)
    REFERENCES `licitacion`.`tbl_contracting_party_type_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_entidad_adjudicadora_tbl_country_identification_code1`
    FOREIGN KEY (`pais`)
    REFERENCES `licitacion`.`tbl_country_identification_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_entidad_adjudicadora_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_id`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_id` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_id` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `tipo_id` VARCHAR(20) NOT NULL,
  `valor` VARCHAR(45) NOT NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_entidad_adjudicadora_id`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_entidad_adjudicadora_id` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_entidad_adjudicadora_id` (
  `entidad_adjudicadora` INT(11) NOT NULL,
  `id` INT(11) NOT NULL,
  INDEX `fk_tbl_entidad_adjudicadora_id_tbl_id1_idx` (`id` ASC),
  INDEX `fk_tbl_entidad_adjudicadora_id_tbl_entidad_adjudicadora1_idx` (`entidad_adjudicadora` ASC),
  CONSTRAINT `fk_tbl_entidad_adjudicadora_id_tbl_entidad_adjudicadora1`
    FOREIGN KEY (`entidad_adjudicadora`)
    REFERENCES `licitacion`.`tbl_entidad_adjudicadora` (`entidad_adjudicadora`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_entidad_adjudicadora_id_tbl_id1`
    FOREIGN KEY (`id`)
    REFERENCES `licitacion`.`tbl_id` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_expediente_cpv`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_expediente_cpv` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_expediente_cpv` (
  `code` INT(11) NOT NULL,
  `expedientes` INT(11) NOT NULL,
  INDEX `fk_tbl_expediente_cpv_tbl_cpv1_idx` (`code` ASC),
  INDEX `fk_tbl_expediente_cpv_tbl_expedientes1_idx` (`expedientes` ASC),
  CONSTRAINT `fk_tbl_expediente_cpv_tbl_cpv1`
    FOREIGN KEY (`code`)
    REFERENCES `licitacion`.`tbl_cpv` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_expediente_cpv_tbl_expedientes1`
    FOREIGN KEY (`expedientes`)
    REFERENCES `licitacion`.`tbl_expedientes` (`expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_extension_de_contrato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_extension_de_contrato` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_extension_de_contrato` (
  `extension_de_contrato` INT(11) NOT NULL AUTO_INCREMENT,
  `opciones` VARCHAR(256) NULL DEFAULT NULL,
  `periodo_de_validez` VARCHAR(1024) NULL DEFAULT NULL,
  `ids_expedientes` INT(11) NOT NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`extension_de_contrato`),
  INDEX `fk_tbl_extension_de_contrato_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  CONSTRAINT `fk_tbl_extension_de_contrato_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_identification_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_identification_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_identification_code` (
  `identification_code` VARCHAR(50) NOT NULL,
  `name` VARCHAR(150) NOT NULL,
  `numericcode` INT(11) NOT NULL,
  PRIMARY KEY (`identification_code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_language` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_language` (
  `code` VARCHAR(10) NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_lugar_de_ejecucion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_lugar_de_ejecucion` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_lugar_de_ejecucion` (
  `lugar_de_ejecucion` INT(11) NOT NULL AUTO_INCREMENT,
  `subentidad_nacional` VARCHAR(3) NULL DEFAULT NULL,
  `subentidad_territorial` VARCHAR(5) NOT NULL,
  `pais` VARCHAR(100) NULL DEFAULT NULL,
  `calle` VARCHAR(220) NULL DEFAULT NULL,
  `codigo_postal` VARCHAR(32) NULL DEFAULT NULL,
  `poblacion` VARCHAR(90) NULL DEFAULT NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ids_expedientes` INT(11) NOT NULL,
  PRIMARY KEY (`lugar_de_ejecucion`),
  INDEX `fk_calle_tbl_country_identification_code1_idx` (`subentidad_nacional` ASC),
  INDEX `fk_calle_tbl_country_subentity_code1_idx` (`subentidad_territorial` ASC),
  INDEX `fk_tbl_lugar_de_ejecucion_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  CONSTRAINT `fk_calle_tbl_country_identification_code1`
    FOREIGN KEY (`subentidad_nacional`)
    REFERENCES `licitacion`.`tbl_country_identification_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_calle_tbl_country_subentity_code1`
    FOREIGN KEY (`subentidad_territorial`)
    REFERENCES `licitacion`.`tbl_country_subentity_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_lugar_de_ejecucion_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 10
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_tipo_plazo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_tipo_plazo` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_tipo_plazo` (
  `tipo_plazo` INT(11) NOT NULL,
  `descripcion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tipo_plazo`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_plazo_de_obtencion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_plazo_de_obtencion` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_plazo_de_obtencion` (
  `id_plazo_de_obtencion` INT(11) NOT NULL AUTO_INCREMENT,
  `fecha` DATE NULL DEFAULT NULL,
  `hora` TIME NULL DEFAULT NULL,
  `observaciones` VARCHAR(550) NULL DEFAULT NULL,
  `tipo_plazo` INT(11) NOT NULL,
  `ids_expedientes` INT(11) NOT NULL,
  PRIMARY KEY (`id_plazo_de_obtencion`),
  INDEX `fk_tbl_plazo_de_obtencion_table11_idx` (`tipo_plazo` ASC),
  INDEX `fk_tbl_plazo_de_obtencion_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  CONSTRAINT `fk_tbl_plazo_de_obtencion_table11`
    FOREIGN KEY (`tipo_plazo`)
    REFERENCES `licitacion`.`tbl_tipo_plazo` (`tipo_plazo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_plazo_de_obtencion_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_tipo_pliego`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_tipo_pliego` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_tipo_pliego` (
  `id` INT(11) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_pliegos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_pliegos` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_pliegos` (
  `pliegos` INT(11) NOT NULL AUTO_INCREMENT,
  `id` VARCHAR(200) NULL DEFAULT NULL,
  `uri` VARCHAR(2500) NULL DEFAULT NULL,
  `document_hash` VARCHAR(2500) NULL DEFAULT NULL,
  `file_name` VARCHAR(2500) NULL DEFAULT NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `tipo_pliego` INT(11) NOT NULL,
  `expedientes` INT(11) NOT NULL,
  PRIMARY KEY (`pliegos`),
  INDEX `fk_tbl_pliegos_tbl_tipo_pliego1_idx` (`tipo_pliego` ASC),
  INDEX `fk_tbl_pliegos_tbl_expedientes1_idx` (`expedientes` ASC),
  CONSTRAINT `fk_tbl_pliegos_tbl_expedientes1`
    FOREIGN KEY (`expedientes`)
    REFERENCES `licitacion`.`tbl_expedientes` (`expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_pliegos_tbl_tipo_pliego1`
    FOREIGN KEY (`tipo_pliego`)
    REFERENCES `licitacion`.`tbl_tipo_pliego` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_procedure_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_procedure_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_procedure_code` (
  `code` INT(11) NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_procurement_legislation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_procurement_legislation` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_procurement_legislation` (
  `code` VARCHAR(15) NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_submission_method_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_submission_method_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_submission_method_code` (
  `code` INT(11) NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_urgency_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_urgency_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_urgency_code` (
  `code` INT(11) NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_proceso_de_licitacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_proceso_de_licitacion` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_proceso_de_licitacion` (
  `proceso_de_licitacion` INT(11) NOT NULL AUTO_INCREMENT,
  `tipo_procedimiento` INT(11) NOT NULL,
  `sistema_contratacion` INT(11) NULL DEFAULT NULL,
  `tramitacion` INT(11) NULL DEFAULT NULL,
  `presentacion_oferta` INT(11) NULL DEFAULT NULL,
  `regulacion` VARCHAR(15) NULL DEFAULT NULL,
  `subasta_electronica` TINYINT(4) NULL DEFAULT NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ids_expedientes` INT(11) NOT NULL,
  PRIMARY KEY (`proceso_de_licitacion`),
  INDEX `fk_tbl_proceso_de_licitacion_tbl_procedure_code1_idx` (`tipo_procedimiento` ASC),
  INDEX `fk_tbl_proceso_de_licitacion_tbl_contracting_system_type_co_idx` (`sistema_contratacion` ASC),
  INDEX `fk_tbl_proceso_de_licitacion_tbl_urgency_code1_idx` (`tramitacion` ASC),
  INDEX `fk_tbl_proceso_de_licitacion_tbl_submission_method_code1_idx` (`presentacion_oferta` ASC),
  INDEX `fk_tbl_proceso_de_licitacion_tbl_procurement_legislation1_idx` (`regulacion` ASC),
  INDEX `fk_tbl_proceso_de_licitacion_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  CONSTRAINT `fk_tbl_proceso_de_licitacion_tbl_contracting_system_type_code1`
    FOREIGN KEY (`sistema_contratacion`)
    REFERENCES `licitacion`.`tbl_contracting_system_type_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_proceso_de_licitacion_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_proceso_de_licitacion_tbl_procedure_code1`
    FOREIGN KEY (`tipo_procedimiento`)
    REFERENCES `licitacion`.`tbl_procedure_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_proceso_de_licitacion_tbl_procurement_legislation1`
    FOREIGN KEY (`regulacion`)
    REFERENCES `licitacion`.`tbl_procurement_legislation` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_proceso_de_licitacion_tbl_submission_method_code1`
    FOREIGN KEY (`presentacion_oferta`)
    REFERENCES `licitacion`.`tbl_submission_method_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_proceso_de_licitacion_tbl_urgency_code1`
    FOREIGN KEY (`tramitacion`)
    REFERENCES `licitacion`.`tbl_urgency_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 10
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_proceso_licitacion_idiomas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_proceso_licitacion_idiomas` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_proceso_licitacion_idiomas` (
  `proceso_de_licitacion` INT(11) NOT NULL,
  `idioma` VARCHAR(10) NOT NULL,
  INDEX `fk_tbl_proceso_licitacion_idiomas_tbl_proceso_de_licitacion_idx` (`proceso_de_licitacion` ASC),
  INDEX `fk_tbl_proceso_licitacion_idiomas_tbl_language1_idx` (`idioma` ASC),
  CONSTRAINT `fk_tbl_proceso_licitacion_idiomas_tbl_language1`
    FOREIGN KEY (`idioma`)
    REFERENCES `licitacion`.`tbl_language` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_proceso_licitacion_idiomas_tbl_proceso_de_licitacion1`
    FOREIGN KEY (`proceso_de_licitacion`)
    REFERENCES `licitacion`.`tbl_proceso_de_licitacion` (`proceso_de_licitacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_guarantee_type_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_guarantee_type_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_guarantee_type_code` (
  `code` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_garantia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_garantia` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_garantia` (
  `garantia` INT NOT NULL AUTO_INCREMENT,
  `guarantee_type_code` INT NOT NULL,
  `importe` DECIMAL(12,2) NULL,
  `moneda` VARCHAR(5) NULL,
  `porcentaje` DECIMAL(8,2) NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`garantia`),
  INDEX `fk_tbl_garantia_tbl_guarantee_type_code1_idx` (`guarantee_type_code` ASC),
  CONSTRAINT `fk_tbl_garantia_tbl_guarantee_type_code1`
    FOREIGN KEY (`guarantee_type_code`)
    REFERENCES `licitacion`.`tbl_guarantee_type_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_ids_garantia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_ids_garantia` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_ids_garantia` (
  `garantia` INT NOT NULL,
  `ids_expedientes` INT(11) NOT NULL,
  INDEX `fk_tbl_ids_garantia_tbl_garantia1_idx` (`garantia` ASC),
  INDEX `fk_tbl_ids_garantia_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  CONSTRAINT `fk_tbl_ids_garantia_tbl_garantia1`
    FOREIGN KEY (`garantia`)
    REFERENCES `licitacion`.`tbl_garantia` (`garantia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_ids_garantia_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_requisitos_de_participacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_requisitos_de_participacion` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_requisitos_de_participacion` (
  `requisitos_de_participacion` INT NOT NULL AUTO_INCREMENT,
  `titulo_habilitante` VARCHAR(3500) NULL,
  `solvencia_requerida` VARCHAR(2500) NULL,
  `ids_expedientes` INT(11) NOT NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`requisitos_de_participacion`),
  INDEX `fk_tbl_requisitos_de_participacion_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  CONSTRAINT `fk_tbl_requisitos_de_participacion_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_required_business_profile_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_required_business_profile_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_required_business_profile_code` (
  `code` VARCHAR(10) NOT NULL,
  `nombre` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_declaration_type_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_declaration_type_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_declaration_type_code` (
  `code` INT NOT NULL,
  `nombre` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_clasificacion_empresarial`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_clasificacion_empresarial` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_clasificacion_empresarial` (
  `required_business_profile_code` VARCHAR(10) NOT NULL,
  `requisitos_de_participacion` INT NOT NULL,
  INDEX `fk_tbl_clasificacion_empresarial_tbl_required_business_prof_idx` (`required_business_profile_code` ASC),
  INDEX `fk_tbl_clasificacion_empresarial_tbl_requisitos_de_particip_idx` (`requisitos_de_participacion` ASC),
  CONSTRAINT `fk_tbl_clasificacion_empresarial_tbl_required_business_profil1`
    FOREIGN KEY (`required_business_profile_code`)
    REFERENCES `licitacion`.`tbl_required_business_profile_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_clasificacion_empresarial_tbl_requisitos_de_participac1`
    FOREIGN KEY (`requisitos_de_participacion`)
    REFERENCES `licitacion`.`tbl_requisitos_de_participacion` (`requisitos_de_participacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_condiciones_de_admision`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_condiciones_de_admision` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_condiciones_de_admision` (
  `declaration_type_code` INT NOT NULL,
  `requisitos_de_participacion` INT NOT NULL,
  INDEX `fk_tbl_condiciones_de_admision_tbl_declaration_type_code1_idx` (`declaration_type_code` ASC),
  INDEX `fk_tbl_condiciones_de_admision_tbl_requisitos_de_participac_idx` (`requisitos_de_participacion` ASC),
  CONSTRAINT `fk_tbl_condiciones_de_admision_tbl_declaration_type_code1`
    FOREIGN KEY (`declaration_type_code`)
    REFERENCES `licitacion`.`tbl_declaration_type_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_condiciones_de_admision_tbl_requisitos_de_participacion1`
    FOREIGN KEY (`requisitos_de_participacion`)
    REFERENCES `licitacion`.`tbl_requisitos_de_participacion` (`requisitos_de_participacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_tipo_evaluacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_tipo_evaluacion` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_tipo_evaluacion` (
  `tipo_evaluacion` INT NOT NULL,
  `descripcion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tipo_evaluacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_technical_capability_type_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_technical_capability_type_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_technical_capability_type_code` (
  `code` VARCHAR(50) NOT NULL,
  `nombre` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_financial_capability_type_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_financial_capability_type_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_financial_capability_type_code` (
  `code` VARCHAR(10) NOT NULL,
  `nombre` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_criterio_de_evaluacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_criterio_de_evaluacion` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_criterio_de_evaluacion` (
  `criterio_de_evaluacion` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(2500) NULL,
  `tipo_evaluacion` INT NOT NULL,
  `tipo_technical` VARCHAR(50) NULL,
  `tipo_financial` VARCHAR(10) NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`criterio_de_evaluacion`),
  INDEX `fk_tbl_criterio_de_evaluacion_tbl_tipo_evaluacion1_idx` (`tipo_evaluacion` ASC),
  INDEX `fk_tbl_criterio_de_evaluacion_tbl_technical_capability_type_idx` (`tipo_technical` ASC),
  INDEX `fk_tbl_criterio_de_evaluacion_tbl_financial_capacibility_ty_idx` (`tipo_financial` ASC),
  CONSTRAINT `fk_tbl_criterio_de_evaluacion_tbl_tipo_evaluacion1`
    FOREIGN KEY (`tipo_evaluacion`)
    REFERENCES `licitacion`.`tbl_tipo_evaluacion` (`tipo_evaluacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_criterio_de_evaluacion_tbl_technical_capability_type_c1`
    FOREIGN KEY (`tipo_technical`)
    REFERENCES `licitacion`.`tbl_technical_capability_type_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_criterio_de_evaluacion_tbl_financial_capacibility_type1`
    FOREIGN KEY (`tipo_financial`)
    REFERENCES `licitacion`.`tbl_financial_capability_type_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_ids_criterio_de_evaluacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_ids_criterio_de_evaluacion` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_ids_criterio_de_evaluacion` (
  `criterio_de_evaluacion` INT NOT NULL,
  `ids_expedientes` INT(11) NOT NULL,
  INDEX `fk_tbl_ids_criterio_de_evaluacion_tbl_criterio_de_evaluacio_idx` (`criterio_de_evaluacion` ASC),
  INDEX `fk_tbl_ids_criterio_de_evaluacion_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  CONSTRAINT `fk_tbl_ids_criterio_de_evaluacion_tbl_criterio_de_evaluacion1`
    FOREIGN KEY (`criterio_de_evaluacion`)
    REFERENCES `licitacion`.`tbl_criterio_de_evaluacion` (`criterio_de_evaluacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_ids_criterio_de_evaluacion_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_subcontratacion_permitida`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_subcontratacion_permitida` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_subcontratacion_permitida` (
  `subcontratacion_permitida` INT NOT NULL AUTO_INCREMENT,
  `ids_expedientes` INT(11) NOT NULL,
  `porcentaje` DECIMAL(5,2) NULL,
  `descripcion` VARCHAR(250) NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`subcontratacion_permitida`),
  INDEX `fk_tbl_subcontratacion_permitida_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  CONSTRAINT `fk_tbl_subcontratacion_permitida_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_criterio_de_adjudicacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_criterio_de_adjudicacion` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_criterio_de_adjudicacion` (
  `criterio_de_adjudicacion` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(1800) NULL,
  `ponderacion` DECIMAL(12,2) NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`criterio_de_adjudicacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_ids_criterio_de_adjudicacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_ids_criterio_de_adjudicacion` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_ids_criterio_de_adjudicacion` (
  `ids_expedientes` INT(11) NOT NULL,
  `criterio_de_adjudicacion` INT NOT NULL,
  INDEX `fk_tbl_ids_criterio_de_adjudicacion_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  INDEX `fk_tbl_ids_criterio_de_adjudicacion_tbl_criterio_de_adjudic_idx` (`criterio_de_adjudicacion` ASC),
  CONSTRAINT `fk_tbl_ids_criterio_de_adjudicacion_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_ids_criterio_de_adjudicacion_tbl_criterio_de_adjudicac1`
    FOREIGN KEY (`criterio_de_adjudicacion`)
    REFERENCES `licitacion`.`tbl_criterio_de_adjudicacion` (`criterio_de_adjudicacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_tender_result_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_tender_result_code` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_tender_result_code` (
  `code` INT NOT NULL,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_resultado_del_procedimiento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_resultado_del_procedimiento` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_resultado_del_procedimiento` (
  `resultado_del_procedimiento` INT NOT NULL AUTO_INCREMENT,
  `resultado` INT NOT NULL,
  `motivacion` VARCHAR(3500) NULL,
  `fecha_acuerdo` DATE NOT NULL,
  `ofertas_recibidas` DECIMAL(3,0) NOT NULL,
  `precio_oferta_mas_baja` DECIMAL(17,2) NULL,
  `precio_oferta_mas_alta` DECIMAL(17,2) NULL,
  `excluidos` TINYINT NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`resultado_del_procedimiento`),
  INDEX `fk_tbl_resultado_del_procedimiento_tbl_tender_result_code1_idx` (`resultado` ASC),
  CONSTRAINT `fk_tbl_resultado_del_procedimiento_tbl_tender_result_code1`
    FOREIGN KEY (`resultado`)
    REFERENCES `licitacion`.`tbl_tender_result_code` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_ids_resultado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_ids_resultado` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_ids_resultado` (
  `ids_expedientes` INT(11) NOT NULL,
  `resultado_del_procedimiento` INT NOT NULL,
  INDEX `fk_tbl_ids_resultado_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  INDEX `fk_tbl_ids_resultado_tbl_resultado_del_procedimiento1_idx` (`resultado_del_procedimiento` ASC),
  CONSTRAINT `fk_tbl_ids_resultado_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_ids_resultado_tbl_resultado_del_procedimiento1`
    FOREIGN KEY (`resultado_del_procedimiento`)
    REFERENCES `licitacion`.`tbl_resultado_del_procedimiento` (`resultado_del_procedimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_contrato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_contrato` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_contrato` (
  `contrato` INT NOT NULL AUTO_INCREMENT,
  `numero_de_contrato` VARCHAR(40) NULL,
  `fecha_formalizacion` DATE NULL,
  `fecha_entrada_vigor` DATE NULL,
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT TIMESTAMP,
  PRIMARY KEY (`contrato`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `licitacion`.`tbl_ids_contrato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `licitacion`.`tbl_ids_contrato` ;

CREATE TABLE IF NOT EXISTS `licitacion`.`tbl_ids_contrato` (
  `contrato` INT NOT NULL,
  `ids_expedientes` INT(11) NOT NULL,
  INDEX `fk_tbl_ids_contrato_tbl_contrato1_idx` (`contrato` ASC),
  INDEX `fk_tbl_ids_contrato_tbl_ids_expedientes1_idx` (`ids_expedientes` ASC),
  CONSTRAINT `fk_tbl_ids_contrato_tbl_contrato1`
    FOREIGN KEY (`contrato`)
    REFERENCES `licitacion`.`tbl_contrato` (`contrato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_ids_contrato_tbl_ids_expedientes1`
    FOREIGN KEY (`ids_expedientes`)
    REFERENCES `licitacion`.`tbl_ids_expedientes` (`ids_expedientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `licitacion` ;

-- -----------------------------------------------------
-- procedure newCPV
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newCPV`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newCPV`(
	IN code INT, 
    IN nombre VARCHAR(300))
BEGIN 
	START TRANSACTION;
	INSERT INTO tbl_cpv (code, nombre)
    VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newCondicionesDeLicitacion
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newCondicionesDeLicitacion`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newCondicionesDeLicitacion`(
	IN ids_expedientes INT,
    IN cv TINYINT,
    IN admision_de_variantes TINYINT,
    IN revision_de_precios VARCHAR(256),
    IN programa_de_financiacion VARCHAR(5),
    IN descripcion_programas_financiacion VARCHAR(3400))
BEGIN
	INSERT INTO tbl_condiciones_de_licitacion (ids_expedientes, cv, admision_de_variantes, revision_de_precios, programa_de_financiacion, descripcion_programas_financiacion) 
    VALUES (ids_expedientes, cv, admision_de_variantes, revision_de_precios, programa_de_financiacion, descripcion_programas_financiacion);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newContractFolderStatusCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newContractFolderStatusCode`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newContractFolderStatusCode`(
	IN code VARCHAR(50),
    IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_contract_folder_status_code (code, nombre)
        VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newContractingPartyTypeCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newContractingPartyTypeCode`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newContractingPartyTypeCode`(
	IN code INT,
    IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_contracting_party_type_code (code, nombre)
        VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newContractingSystemTypeCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newContractingSystemTypeCode`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newContractingSystemTypeCode`(
	IN code INT,
    IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_contracting_system_type_code (code, nombre)
        VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newCountryIdentificationCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newCountryIdentificationCode`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newCountryIdentificationCode`(
	IN code VARCHAR(3),
	IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
	INSERT INTO tbl_country_identification_code (code, nombre)
	VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newCountrySubentityCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newCountrySubentityCode`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newCountrySubentityCode`(
IN code VARCHAR(5),
IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_country_subentity_code (code, nombre)
        VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newEntidadAdjudicadora
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newEntidadAdjudicadora`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newEntidadAdjudicadora`(
	IN ids_expedientes INT,
    IN ubicacion_organica VARCHAR(300),
    IN nombre VARCHAR(300),
    IN tipo_administracion INT,
    IN sitio_web VARCHAR(256),
    IN calle VARCHAR(220),
    IN codigo_postal VARCHAR(32),
    IN poblacion VARCHAR(90),
    IN pais VARCHAR(3),
    IN nombre_contacto VARCHAR(300),
    IN telefono VARCHAR(55),
    IN fax VARCHAR(55),
    IN correo_electronico VARCHAR(500),
    IN NIF VARCHAR(200),
    OUT entidad_adjudicadora INT)
BEGIN
		INSERT INTO tbl_entidad_adjudicadora (ids_expedientes, ubicacion_organica, nombre, tipo_administracion, sitio_web, calle, codigo_postal, poblacion, pais, nombre_contacto, telefono, fax, correo_electronico, NIF)
		VALUES (ids_expedientes, ubicacion_organica, nombre, tipo_administracion, sitio_web, calle, codigo_postal, poblacion, pais, nombre_contacto, telefono, fax, correo_electronico, NIF);
    
		SET entidad_adjudicadora = last_insert_id();
   
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newEntidadAdjudicadora_ID
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newEntidadAdjudicadora_ID`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newEntidadAdjudicadora_ID`(
	IN entidad_adjudicadora INT,
    IN id INT)
BEGIN
        INSERT INTO tbl_entidad_adjudicadora_id (entidad_adjudicadora, id) VALUES (entidad_adjudicadora, id);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newExpediente
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newExpediente`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newExpediente`(
	IN expedientes INT, 
    IN numero_expediente VARCHAR(45),
	IN title VARCHAR(2000),
    IN link VARCHAR(2500),
    IN objeto_contrato VARCHAR(2000),
    IN valor_estimado DECIMAL(12,2),
    IN presupuesto_sin_impuestos DECIMAL(12,2),
    IN presupuesto_con_impuestos DECIMAL(12,2),
    IN start_date DATE, 
    IN end_date DATE,
    IN duracion DECIMAL(17,0),
    IN unitcode VARCHAR(45),
    IN typecode INT, 
    IN subtypecode INT)
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_expedientes (expedientes, numero_expediente, title, link, objeto_contrato, valor_estimado, presupuesto_sin_impuestos,
				presupuesto_con_impuestos, start_date, end_date, duracion, unitcode, typecode, subtypecode)
		VALUES (expedientes, numero_expediente, title, link, objeto_contrato, valor_estimado, presupuesto_sin_impuestos,
				presupuesto_con_impuestos, start_date, end_date, duracion, unitcode, typecode, subtypecode);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newExpediente_CPV
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newExpediente_CPV`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newExpediente_CPV`(
	IN code INT,
    IN expedientes INT)
BEGIN
	START TRANSACTION;
    
    INSERT INTO tbl_expediente_cpv (code, expedientes)
    VALUES (code, expedientes);
    
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newExpediente_Ids
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newExpediente_Ids`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newExpediente_Ids`(
	IN ids INT,
    IN expediente INT,
    IN summary VARCHAR(400),
    IN updated TIMESTAMP,
    IN estado VARCHAR(45),
    OUT ids_expediente INT)
BEGIN
		INSERT INTO tbl_ids_expedientes (ids, expediente, summary, updated, estado)
        VALUES (ids, expediente, summary, updated, estado);
        SET ids_expediente = last_insert_id();
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newExtensionDeContrato
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newExtensionDeContrato`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newExtensionDeContrato`(
	IN ids_expedientes INT, 
    IN opciones VARCHAR(256),
    IN periodo_de_validez VARCHAR(1024))
BEGIN
	INSERT INTO tbl_extension_de_contrato (ids_expedientes, opciones, periodo_de_validez)
    VALUES (ids_expedientes, opciones, periodo_de_validez);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newFundingProgramCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newFundingProgramCode`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newFundingProgramCode`(
	IN code VARCHAR(5),
    IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
    INSERT INTO tbl_funding_program_code VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newId
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newId`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newId`(
	IN entidad_adjudicadora INT,
    IN tipo_id VARCHAR(20),
    IN valor VARCHAR(45))
BEGIN
    
		INSERT INTO tbl_id (tipo_id, valor) VALUES (tipo_id, valor);
        CALL newEntidadAdjudicadora_ID ( entidad_adjudicadora, last_insert_id());
    

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newIds
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newIds`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newIds`(
	IN modos_id INT,
    OUT ids INT)
BEGIN 
	START TRANSACTION;
	INSERT INTO tbl_ids (modosid)
    VALUES (modos_id);
    
    SET ids = last_insert_id();
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newLanguage
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newLanguage`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newLanguage`(
	IN code VARCHAR(10),
    IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_language (code, nombre)
        VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newLugarDeEjecucion
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newLugarDeEjecucion`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newLugarDeEjecucion`(
	IN ids_expedientes INT,
    IN subentidad_nacional VARCHAR(3),
    IN subentidad_territorial VARCHAR(5),
    IN pais VARCHAR(100),
    IN calle VARCHAR(220),
    IN codigo_postal VARCHAR(32),
    IN poblacion VARCHAR(90))
BEGIN
		INSERT INTO tbl_lugar_de_ejecucion (ids_expedientes, subentidad_nacional, subentidad_territorial, pais, calle, codigo_postal, poblacion)
        VALUES (ids_expedientes, subentidad_nacional, subentidad_territorial, pais, calle, codigo_postal, poblacion);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newModosId
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newModosId`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newModosId`(
	IN modosId INT,
    IN description VARCHAR(45))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_modosid (modosid, description)
        VALUES (modosId, description);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newPlazoDeObtencion
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newPlazoDeObtencion`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newPlazoDeObtencion`(
	IN ids_expedientes INT,
    IN tipo_plazo INT,
    IN fecha DATE, 
    IN hora TIME,
    IN observaciones VARCHAR(550))
BEGIN
	INSERT INTO tbl_plazo_de_obtencion (fecha, hora, observaciones, ids_expedientes, tipo_plazo) VALUES (fecha, hora, observaciones, ids_expedientes, tipo_plazo);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newPliego
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newPliego`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newPliego`(
	IN id VARCHAR(200),
    IN uri VARCHAR(2500),
    IN document_hash VARCHAR(2500),
    IN file_name VARCHAR(2500),
    IN expedientes INT,
    IN tipo_pliego INT)
BEGIN
	START TRANSACTION;
    
		INSERT INTO tbl_pliegos (id, uri, document_hash, file_name, expedientes, tipo_pliego)
        VALUES (id, uri, document_hash, file_name, expedientes, tipo_pliego);
    
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newProcedureCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newProcedureCode`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newProcedureCode`(
	IN code INT,
    IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_procedure_code (code, nombre)
        VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newProcesoDeLicitacion
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newProcesoDeLicitacion`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newProcesoDeLicitacion`(
	IN ids_expedientes INT,
    IN procedure_code INT,
    IN contracting_system_type_code INT,
    IN urgency_code INT,
    IN submission_method_code INT,
    IN procurement_legislation VARCHAR(15),
    IN subasta_electronica TINYINT,
    OUT proceso_de_licitacion INT)
BEGIN
		INSERT INTO tbl_proceso_de_licitacion (ids_expedientes, tipo_procedimiento, sistema_contratacion, tramitacion, presentacion_oferta, regulacion, subasta_electronica)
        VALUES (ids_expedientes, procedure_code, contracting_system_type_code, urgency_code, submission_method_code, procurement_legislation, subasta_electronica);
    
		SET proceso_de_licitacion = last_insert_id();
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newProcesoDeLicitacion_Idioma
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newProcesoDeLicitacion_Idioma`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newProcesoDeLicitacion_Idioma`(
	IN proceso_de_licitacion INT,
    IN idioma VARCHAR(10))
BEGIN
		INSERT INTO tbl_proceso_licitacion_idiomas (proceso_de_licitacion, idioma)
        VALUES (proceso_de_licitacion, idioma);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newProcurementLegislation
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newProcurementLegislation`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newProcurementLegislation`(
	IN code VARCHAR(15),
    IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_procurement_legislation (code, nombre)
        VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newSubmissionMethodCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newSubmissionMethodCode`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newSubmissionMethodCode`(
	IN code INT,
    IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_submission_method_code (code, nombre)
        VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newSubtypeCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newSubtypeCode`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newSubtypeCode`(
	IN code INT, 
    IN nombre VARCHAR(300),
    IN type_code INT)
BEGIN 
	INSERT INTO tbl_subtype_code (code, nombre, type_code)
    VALUES (code, nombre, type_code);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newTipoPlazo
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newTipoPlazo`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newTipoPlazo`(
	IN tipo_plazo INT,
    IN descripcion VARCHAR(45))
BEGIN
	START transaction;
    INSERT INTO tbl_tipo_plazo (tipo_plazo, descripcion) VALUES (tipo_plazo, descripcion);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newTipoPliego
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newTipoPliego`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newTipoPliego`(
	IN id INT,
    IN tipo VARCHAR(45))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_tipo_pliego (id, tipo)
        VALUES (id, tipo);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newTypeCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newTypeCode`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newTypeCode`(
	IN code INT,
    IN nombre VARCHAR(200))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_type_code (code, nombre)
        VALUES (code, nombre);
    COMMIT; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newUrgencyCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newUrgencyCode`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `newUrgencyCode`(
	IN code INT,
    IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
		INSERT INTO tbl_urgency_code (code, nombre)
        VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure searchExpediente
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`searchExpediente`;

DELIMITER $$
USE `licitacion`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `searchExpediente`(
	IN id INT, 
    OUT existe BOOLEAN)
BEGIN
	START TRANSACTION;
    SET existe = 
		CASE WHEN (SELECT COUNT(*) FROM tbl_expedientes WHERE expedientes = id) = 1 THEN 1
        ELSE 0
        END;
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newGuaranteeTypeCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newGuaranteeTypeCode`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newGuaranteeTypeCode` (
	IN code INT,
    IN nombre VARCHAR(45))
BEGIN
	START TRANSACTION;
    INSERT INTO tbl_guarantee_type_code (code, nombre) VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newGarantia
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newGarantia`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newGarantia` (
	IN guarantee_type_code INT,
    IN importe DECIMAL(12,2),
    IN moneda VARCHAR(5),
    IN porcentaje DECIMAL(8,2),
    OUT garantia INT)
BEGIN
	INSERT INTO tbl_garantia (guarantee_type_code, importe, moneda, porcentaje) VALUES (guarantee_type_code, importe, moneda, porcentaje);
    SET garantia = last_insert_id();
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newIds_Garantia
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newIds_Garantia`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newIds_Garantia` (
	IN ids INT,
    IN garantia INT)
BEGIN
	INSERT INTO tbl_ids_garantia (ids_expedientes, garantia) VALUES (ids, garantia);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newRequiredBusinessProfileCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newRequiredBusinessProfileCode`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newRequiredBusinessProfileCode` (
	IN code VARCHAR(10),
    IN nombre VARCHAR(200))
BEGIN
	START TRANSACTION;
    INSERT INTO tbl_required_business_profile_code (code, nombre) VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newDeclarationTypeCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newDeclarationTypeCode`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newDeclarationTypeCode` (
	IN code INT, 
    IN nombre VARCHAR(200))
BEGIN
	START TRANSACTION;
    INSERT INTO tbl_declaration_type_code (code, nombre) VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newRequisitosDeParticipacion
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newRequisitosDeParticipacion`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newRequisitosDeParticipacion` (
	IN titulo_habilitante VARCHAR(3500),
    IN solvencia_requerida VARCHAR(2500),
    IN ids_expedientes INT,
    OUT requisitos INT)
BEGIN
	INSERT INTO tbl_requisitos_de_participacion (titulo_habilitante, solvencia_requerida, ids_expedientes)
	VALUES (titulo_habilitante, solvencia_requerida, ids_expedientes);
    
    SET requisitos = last_insert_id();
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newClasificacionEmpresarial
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newClasificacionEmpresarial`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newClasificacionEmpresarial` (
	IN required_business_profile_code VARCHAR(10),
    IN requisitos_de_participacion INT)
BEGIN
	INSERT INTO tbl_clasificacion_empresarial (required_business_profile_code, requisitos_de_participacion)
    VALUES (required_business_profile_code, requisitos_de_participacion);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newCondicionesDeAdmision
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newCondicionesDeAdmision`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newCondicionesDeAdmision` (
	IN declaration_type_code INT,
    IN requisitos_de_participacion INT)
BEGIN
	INSERT INTO tbl_condiciones_de_admision (declaration_type_code, requisitos_de_participacion)
    VALUES (declaration_type_code, requisitos_de_participacion);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newTipoEvaluacion
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newTipoEvaluacion`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newTipoEvaluacion` (
	IN tipo_evaluacion INT,
    IN descripcion VARCHAR(45))
BEGIN
	START TRANSACTION;
	INSERT INTO tbl_tipo_evaluacion (tipo_evaluacion, descripcion) VALUES (tipo_evaluacion, descripcion);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newTechnicalCapabilityTypeCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newTechnicalCapabilityTypeCode`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newTechnicalCapabilityTypeCode` (
	IN code VARCHAR(50),
    IN nombre VARCHAR(150))
BEGIN
	START TRANSACTION;
	INSERT INTO tbl_technical_capability_type_code (code, nombre) VALUES (code, nombre);
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newFinancialCapabilityTypeCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newFinancialCapabilityTypeCode`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newFinancialCapabilityTypeCode` (
	IN code VARCHAR(10),
    IN nombre VARCHAR(150))
BEGIN
	START TRANSACTION;
	INSERT INTO tbl_financial_capability_type_code (code, nombre) VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newCriterioDeEvaluacion
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newCriterioDeEvaluacion`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newCriterioDeEvaluacion` (
	IN descripcion VARCHAR(2500),
    IN tipo_evaluacion INT,
    IN tipo_technical VARCHAR(50),
    IN tipo_financial VARCHAR(10),
    OUT criterio INT)
BEGIN
	INSERT INTO tbl_criterio_de_evaluacion (descripcion, tipo_evaluacion, tipo_technical, tipo_financial) 
    VALUES (descripcion, tipo_evaluacion, tipo_technical, tipo_financial);

	 SET criterio = last_insert_id();
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newIds_CriterioDeEvaluacion
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newIds_CriterioDeEvaluacion`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newIds_CriterioDeEvaluacion` (
	IN criterio_de_evaluacion INT,
    IN ids_expedientes INT)
BEGIN
	INSERT INTO tbl_ids_criterio_de_evaluacion (criterio_de_evaluacion, ids_expedientes)
    VALUES (criterio_de_evaluacion, ids_expedientes);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newSubcontratacionPermitida
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newSubcontratacionPermitida`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newSubcontratacionPermitida` (
	IN ids_expedientes INT,
    IN porcentaje DECIMAL(5,2),
    IN descripcion VARCHAR(250))
BEGIN
	INSERT INTO tbl_subcontratacion_permitida (ids_expedientes, porcentaje, descripcion)
    VALUES (ids_expedientes, porcentaje, descripcion);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newCriterioDeAdjudicacion
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newCriterioDeAdjudicacion`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newCriterioDeAdjudicacion` (
	IN descripcion VARCHAR(1800),
    IN ponderacion DECIMAL(12,2))
BEGIN
	INSERT INTO tbl_criterio_de_adjudicacion (descripcion, ponderacion)
    VALUES (descripcion, ponderacion);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newIds_CriterioDeAdjudicacion
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newIds_CriterioDeAdjudicacion`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newIds_CriterioDeAdjudicacion` (
	IN ids_expedientes INT,
    IN criterio_de_adjudicacion INT,
    OUT criterio INT)
BEGIN
	INSERT INTO tbl_ids_criterio_de_adjudicacion (ids_expedientes, criterio_de_adjudicacion)
    VALUES (ids_expedientes, criterio_de_adjudicacion);
    SET criterio = last_insert_id();
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newTenderResultCode
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newTenderResultCode`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newTenderResultCode` (
	IN code INT,
    IN nombre VARCHAR(100))
BEGIN
	START TRANSACTION;
    INSERT INTO tbl_tender_result_code (code, nombre) VALUES (code, nombre);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newResultadoDelProcedimiento
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newResultadoDelProcedimiento`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newResultadoDelProcedimiento` (
	IN resultado INT,
    IN motivacion VARCHAR(3500),
    IN fecha_acuerdo DATE,
    IN ofertas_recibidas DECIMAL(3,0),
    IN precio_oferta_mas_baja DECIMAL(17,2),
    IN precio_oferta_mas_alta DECIMAL(17,2),
    IN excluidos BOOLEAN,
    OUT resultado_del_procedimiento INT)
BEGIN
	INSERT INTO tbl_resultado_del_procedimiento (resultado, motivacion, fecha_acuerdo, ofertas_recibidas, precio_oferta_mas_baja, precio_oferta_mas_alta, excluidos)
    VALUES (resultado, motivacion, fecha_acuerdo, ofertas_recibidas, precio_oferta_mas_baja, precio_oferta_mas_alta, excluidos);
    
    SET resultado_del_procedimiento = last_insert_id();
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newIds_Resultado
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newIds_Resultado`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newIds_Resultado` (
	IN ids_expedientes INT,
    in resultado_del_procedimiento INT)
BEGIN
	INSERT INTO tbl_ids_resultado (ids_expedientes, resultado_del_procedimiento) VALUES (ids_expedientes, resultado_del_procedimiento);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newContrato
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newContrato`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newContrato` (
	IN numero_contrato VARCHAR(40),
    IN fecha_formalizacion DATE,
    IN fecha_entrada_vigor DATE,
    OUT contrato INT)
BEGIN
	INSERT INTO tbl_contrato (numero_contrato, fecha_formalizacion, fecha_entrada_vigor) VALUES (numero_contrato, fecha_formalizacion, fecha_entrada_vigor);
    SET contrato = last_insert_id();
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure newIds_Contrato
-- -----------------------------------------------------

USE `licitacion`;
DROP procedure IF EXISTS `licitacion`.`newIds_Contrato`;

DELIMITER $$
USE `licitacion`$$
CREATE PROCEDURE `newIds_Contrato` (
	IN ids_expedientes INT,
    IN contrato INT)
BEGIN
	INSERT INTO tbl_ids_contrato (ids_expedientes, contrato) VALUES (ids_expedientes, contrato);
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
